# Порівняння алгоритмів сортування в Python

## Опис проєкту

Цей проєкт реалізує та порівнює три алгоритми сортування: сортування злиттям (Merge Sort), сортування вставками (Insertion Sort) та вбудований в Python алгоритм Timsort (використовується функція `sorted`). Метою є емпірично перевірити продуктивність цих алгоритмів та проаналізувати, чому Timsort є оптимальним вибором для більшості випадків.

## Реалізовані алгоритми

1. **Merge Sort**: Рекурсивний алгоритм, який розділяє масив на дві частини, сортує їх та об'єднує в один відсортований масив.
2. **Insertion Sort**: Простий алгоритм, що працює добре для малих масивів, вставляючи кожен елемент на своє місце в уже відсортованій частині масиву.
3. **Timsort**: Гібридний алгоритм сортування, що поєднує сортування злиттям та сортування вставками. Використовується як вбудований алгоритм Python (`sorted`).

Висновки
Timsort є значно швидшим за інші алгоритми на середніх та великих масивах завдяки поєднанню сортування злиттям та сортування вставками. Це робить його найефективнішим для загального використання.
Сортування злиттям є ефективним для великих наборів даних, але поступається Timsort через більшу кількість рекурсивних викликів та об'єднань.
Сортування вставками працює повільно на більших масивах через квадратичну складність, тому його ефективність обмежена малими наборами даних.